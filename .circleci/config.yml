version: 2.1

defaults: &defaults
  machine:
    image: ubuntu-1604:201903-01
    docker_layer_caching: true
  working_directory: ~/platform-secrets


orbs:
  codecov: codecov/codecov@1.0.4
  gcloud: circleci/gcp-cli@1.8.3


jobs:

  test:
    <<: *defaults
    steps:
      - checkout

      - restore_cache:
          keys:
          - v1-dependencies-python_3.7.2-{{ checksum "setup.py" }}-{{ checksum "requirements/syntax.txt" }}-{{ checksum "requirements/test.txt" }}

      - run:
          name: Configuring Docker Client
          command: |
            make -s gke_login

      - run:
          name: Running Kubernetes
          command: |
            # https://github.com/kubernetes/kubernetes/blob/master/CHANGELOG-1.10.md#before-upgrading
            #
            # MountPropagation feature is now beta. As a consequence, all
            # volume mounts in containers are now rslave on Linux by default.
            # To make this default work in all Linux environments the entire
            # mount tree should be marked as shareable, e.g. via mount
            # --make-rshared /. All Linux distributions that use systemd
            # already have the root directory mounted as rshared and hence
            # they need not do anything. In Linux environments without systemd
            # we recommend running mount --make-rshared / during boot before
            # docker is started.
            sudo mount --make-rshared /
            sudo mount --make-rshared /run
            sudo mount --make-rshared /var/lib/docker

            make install_k8s
            make start_k8s
            make apply_configuration_k8s
            make test_k8s

      - run:
          name: Pulling Docker Images
          command: |
            # docker-credential-gcloud still relies on Python 2.7,
            # thus we'd better pull testing images before we set up Python 3
            eval $(minikube docker-env) && make gke_docker_pull_test_images

      - run:
          name: Setting up Python Virtual Environment
          command: |
            pyenv global 3.7.0
            python -m venv venv
            source venv/bin/activate
            make setup

      - save_cache:
          paths:
            - venv
          key: v1-dependencies-python_3.7.2-{{ checksum "setup.py" }}-{{ checksum "requirements/syntax.txt" }}-{{ checksum "requirements/test.txt" }}

      - run:
          name: Running Static Code Analysis
          command: |
            source venv/bin/activate
            make lint

      - run:
          name: Running Unit Tests
          command: |
            source venv/bin/activate
            make test_unit

      - codecov/upload:
          file: .coverage-unit.xml
          flags: unit

      - run:
          name: Running Integration Tests
          command: |
            source venv/bin/activate
            make test_integration

      - codecov/upload:
          file: .coverage-integration.xml
          flags: integration

      - run:
          name: Stopping Kubernetes
          command: |
            make clean_k8s
          when: always

  gke_deploy:
    <<: *defaults
    steps:
      - checkout
      - run:
          name: GKE Auth
          command: |
            make -s gke_login
      - run:
          name: GKE Docker Push
          command: |
            make gke_docker_push
      - run:
          name: GKE Deploy
          command: |
            make gke_k8s_deploy

  artifactory_deploy:
    <<: *defaults

    steps:
      - checkout

      - run:
          name: Artifactory Docker Push
          command: |
            make artifactory_docker_push

      - run:
          name: Artifactory Helm Push
          command: |
            make artifactory_helm_push



workflows:
  version: 2

  main:
    jobs:
      - test:
          context: org-dev
          filters:
            branches:
              ignore:
                - master
                - /release.*/
                - /artifactory.*/

  dev:
    jobs:
      - test:
          context: org-dev
          filters:
            branches:
              only:
                - master
      - gke_deploy:
          context: org-dev
          requires:
            - test
          filters:
            branches:
              only:
                - master

  artifactory:
    jobs:
      - test:
          context: org-global
          filters:
            branches:
              ignore: /.*/
            tags:
              only:
                - /artifactory.*/
      - artifactory_deploy:
          context: org-global
          requires:
            - test
          filters:
            branches:
              ignore: /.*/
            tags:
              only:
                - /artifactory.*/
